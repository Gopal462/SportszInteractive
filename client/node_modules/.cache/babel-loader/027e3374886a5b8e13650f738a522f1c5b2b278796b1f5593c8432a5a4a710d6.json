{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      countries: [],\n      // List of countries\n      selectedCountry: null,\n      // Currently selected country ID\n      selectedCountryDetails: null,\n      // Details of the selected country,\n      showModal: false,\n      // Controls visibility of the modal\n      newCountry: {\n        // Stores new country data\n        name: '',\n        rank: '',\n        flag: ''\n      }\n    };\n  },\n  mounted() {\n    // Fetch the list of countries when the component is mounted\n    axios.get('/api/countries').then(response => {\n      this.countries = response.data;\n    }).catch(error => {\n      console.error('Error fetching countries:', error);\n    });\n  },\n  methods: {\n    addCountry() {\n      // You can customize this to send the data to your server\n      console.log(\"New Country:\", this.newCountry);\n\n      // axios.post('/api/countries', this.newCountry)\n      //   .then(response => {\n      //     this.countries.push(response.data); // Add the new country to the list\n      //     this.showModal = false; // Close the modal\n      //     this.newCountry = { name: '', rank: '', flag: '' }; // Reset the form\n      //   })\n      //   .catch(error => {\n      //     console.error('Error adding country:', error);\n      //   });\n    },\n    fetchCountryDetails() {\n      const country = this.countries.find(c => c.rank === this.selectedCountry);\n      if (country) {\n        // Fetch details for the selected country\n        axios.get(`/api/countries/${this.selectedCountry}`).then(response => {\n          this.selectedCountryDetails = response.data;\n        }).catch(error => {\n          console.error('Error fetching country details:', error);\n        });\n      } else {\n        this.selectedCountryDetails = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","countries","selectedCountry","selectedCountryDetails","showModal","newCountry","name","rank","flag","mounted","get","then","response","catch","error","console","methods","addCountry","log","fetchCountryDetails","country","find","c"],"sources":["src/components/HomePages.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <!-- Modal Component -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <h2>Add New Country</h2>\r\n        <form @submit.prevent=\"addCountry\">\r\n          <label for=\"country-name\">Country Name:</label>&nbsp;\r\n          <input type=\"text\" v-model=\"newCountry.name\" id=\"country-name\" required>\r\n          <br/>  <br/>\r\n          <label for=\"country-rank\">Country Rank:</label>&nbsp;\r\n          <input type=\"number\" v-model=\"newCountry.rank\" id=\"country-rank\" required>\r\n          <br/>  <br/>\r\n          <label for=\"country-flag\">Country Flag URL:</label>&nbsp;\r\n          <input type=\"text\" v-model=\"newCountry.flag\" id=\"country-flag\">\r\n          <br/>  <br/>\r\n          <button type=\"submit\" @click=\"addCountry\">Add Country</button>\r\n          <button type=\"button\" @click=\"showModal = false\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div class=\"Main\" v-if=\"!showModal\">\r\n      <button @click=\"showModal = true\" >Add New Country</button>\r\n      <h1>Countries List</h1>\r\n      <select v-model=\"selectedCountry\" @change=\"fetchCountryDetails\">\r\n        <option v-for=\"country in countries\" :key=\"country.rank\" :value=\"country.rank\">\r\n          {{ country.name }}\r\n        </option>\r\n      </select>\r\n  \r\n      <div v-if=\"selectedCountryDetails\">\r\n        <h2>Details of Selected Country</h2>\r\n        <p><strong>Name:</strong> {{ selectedCountryDetails.name }}</p>\r\n        <p><strong>Rank:</strong> {{ selectedCountryDetails.rank }}</p>\r\n        <img :src=\"`/api/${selectedCountryDetails.flag}`\" alt=\"Country Image\" v-if=\"selectedCountryDetails.flag\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        countries: [], // List of countries\r\n        selectedCountry: null, // Currently selected country ID\r\n        selectedCountryDetails: null, // Details of the selected country,\r\n        showModal: false, // Controls visibility of the modal\r\n        newCountry: { // Stores new country data\r\n        name: '',\r\n        rank: '',\r\n        flag: ''\r\n      }\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the list of countries when the component is mounted\r\n      axios.get('/api/countries')\r\n        .then(response => {\r\n          this.countries = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching countries:', error);\r\n        });\r\n    },\r\n    methods: {\r\n      addCountry() {\r\n      // You can customize this to send the data to your server\r\n      console.log(\"New Country:\", this.newCountry);\r\n      \r\n      // axios.post('/api/countries', this.newCountry)\r\n      //   .then(response => {\r\n      //     this.countries.push(response.data); // Add the new country to the list\r\n      //     this.showModal = false; // Close the modal\r\n      //     this.newCountry = { name: '', rank: '', flag: '' }; // Reset the form\r\n      //   })\r\n      //   .catch(error => {\r\n      //     console.error('Error adding country:', error);\r\n      //   });\r\n    },\r\n      fetchCountryDetails() {\r\n        const country = this.countries.find(c => c.rank === this.selectedCountry);\r\n  \r\n        if (country) {\r\n          // Fetch details for the selected country\r\n          axios.get(`/api/countries/${this.selectedCountry}`)\r\n            .then(response => {\r\n              this.selectedCountryDetails = response.data;\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching country details:', error);\r\n            });\r\n        } else {\r\n          this.selectedCountryDetails = null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add styles here if needed */\r\n  </style>\r\n  "],"mappings":"AAyCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,eAAA;MAAA;MACAC,sBAAA;MAAA;MACAC,SAAA;MAAA;MACAC,UAAA;QAAA;QACAC,IAAA;QACAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;EACAC,QAAA;IACA;IACAV,KAAA,CAAAW,GAAA,mBACAC,IAAA,CAAAC,QAAA;MACA,KAAAX,SAAA,GAAAW,QAAA,CAAAZ,IAAA;IACA,GACAa,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,8BAAAA,KAAA;IACA;EACA;EACAE,OAAA;IACAC,WAAA;MACA;MACAF,OAAA,CAAAG,GAAA,sBAAAb,UAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAc,oBAAA;MACA,MAAAC,OAAA,QAAAnB,SAAA,CAAAoB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAf,IAAA,UAAAL,eAAA;MAEA,IAAAkB,OAAA;QACA;QACArB,KAAA,CAAAW,GAAA,wBAAAR,eAAA,IACAS,IAAA,CAAAC,QAAA;UACA,KAAAT,sBAAA,GAAAS,QAAA,CAAAZ,IAAA;QACA,GACAa,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,oCAAAA,KAAA;QACA;MACA;QACA,KAAAX,sBAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}