{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      countries: [],\n      // List of countries\n      selectedCountry: null,\n      // Currently selected country ID\n      selectedCountryDetails: null // Details of the selected country\n    };\n  },\n  mounted() {\n    // Fetch the list of countries when the component is mounted\n    axios.get('/api/countries').then(response => {\n      this.countries = response.data;\n    }).catch(error => {\n      console.error('Error fetching countries:', error);\n    });\n  },\n  methods: {\n    fetchCountryDetails() {\n      // Find the selected country from the list\n      const country = this.countries.find(c => c.id === this.selectedCountry);\n      if (country) {\n        // Fetch details for the selected country\n        axios.get(`/api/countries/${this.selectedCountry}`).then(response => {\n          this.selectedCountryDetails = response.data;\n        }).catch(error => {\n          console.error('Error fetching country details:', error);\n        });\n      } else {\n        this.selectedCountryDetails = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","countries","selectedCountry","selectedCountryDetails","mounted","get","then","response","catch","error","console","methods","fetchCountryDetails","country","find","c","id"],"sources":["src/components/HomePages.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Countries List</h1>\r\n      <select v-model=\"selectedCountry\" @change=\"fetchCountryDetails\">\r\n        <option v-for=\"country in countries\" :key=\"country.id\" :value=\"country.id\">\r\n          {{ country.name }}\r\n        </option>\r\n      </select>\r\n  \r\n      <div v-if=\"selectedCountryDetails\">\r\n        <h2>Details of Selected Country</h2>\r\n        <p><strong>Name:</strong> {{ selectedCountryDetails.name }}</p>\r\n        <p><strong>Rank:</strong> {{ selectedCountryDetails.rank }}</p>\r\n        <img :src=\"selectedCountryDetails.image\" alt=\"Country Image\" v-if=\"selectedCountryDetails.image\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        countries: [], // List of countries\r\n        selectedCountry: null, // Currently selected country ID\r\n        selectedCountryDetails: null, // Details of the selected country\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the list of countries when the component is mounted\r\n      axios.get('/api/countries')\r\n        .then(response => {\r\n          this.countries = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching countries:', error);\r\n        });\r\n    },\r\n    methods: {\r\n      fetchCountryDetails() {\r\n        // Find the selected country from the list\r\n        const country = this.countries.find(c => c.id === this.selectedCountry);\r\n  \r\n        if (country) {\r\n          // Fetch details for the selected country\r\n          axios.get(`/api/countries/${this.selectedCountry}`)\r\n            .then(response => {\r\n              this.selectedCountryDetails = response.data;\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching country details:', error);\r\n            });\r\n        } else {\r\n          this.selectedCountryDetails = null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add styles here if needed */\r\n  </style>\r\n  "],"mappings":"AAmBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,eAAA;MAAA;MACAC,sBAAA;IACA;EACA;EACAC,QAAA;IACA;IACAL,KAAA,CAAAM,GAAA,mBACAC,IAAA,CAAAC,QAAA;MACA,KAAAN,SAAA,GAAAM,QAAA,CAAAP,IAAA;IACA,GACAQ,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,8BAAAA,KAAA;IACA;EACA;EACAE,OAAA;IACAC,oBAAA;MACA;MACA,MAAAC,OAAA,QAAAZ,SAAA,CAAAa,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,UAAAd,eAAA;MAEA,IAAAW,OAAA;QACA;QACAd,KAAA,CAAAM,GAAA,wBAAAH,eAAA,IACAI,IAAA,CAAAC,QAAA;UACA,KAAAJ,sBAAA,GAAAI,QAAA,CAAAP,IAAA;QACA,GACAQ,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,oCAAAA,KAAA;QACA;MACA;QACA,KAAAN,sBAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}